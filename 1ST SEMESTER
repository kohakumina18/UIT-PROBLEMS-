Notepad++ v8.4.7 bug-fixes and new features:

1.  Fix empty session issue due to forced Windows update restart.
2.  Fix printing with extra background colors issue due to Change History.
3.  Update to Scintilla 5.3.1 and Lexilla 5.2.0.
4.  Updated nlohmann json to 3.11.2 and Boost to 1.80.0.
5.  Make large file restriction configurable.
6.  Optimizing open/save large files time.
7.  Remember Column Editor settings through the sessions.
8.  Fix plugin admin search issue.
9.  Installer enhancement: prevent arm64 installer from installing on non ARM64 system.
10. Installer enhancement: remember "Don't use_%APPDATA%" option.
11. Add new API NPPM_GETBOOKMARKID for getting bookmark ID.
12. Enhance "Go To" dialog: update line/position data dynamically.
13. Fix lines hiding issue.
14. Fix language detected from content not applied if default language is set.
15. Fix long filters get truncated in Find in Files feature.
16. Add ESC Key for aborting "Move to Recycle Bin" confirmation prompt.


Get more info on
https://notepad-plus-plus.org/downloads/v8.4.7/


Included plugins:

1.  NppExport v0.4
2.  Converter v4.5
3.  Mime Tool v2.9


Updater (Installer only):

* WinGup (for Notepad++) v5.2.4
// tong cac uoc so nguyen duong n.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
using namespace std;
int main()
{
    long n, i = 1, s = 0;
    cin >> n;
    do {
        if (n % i == 0)
            s = s + i;
        i++;
    } while (i < n);
    cout << s;

    return 0;


// tong cac uoc so nguyen duong n.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
using namespace std;

 int Input() {
    int a;
    cin >> a;
    return a;
}

int sum_even_divisor(int x)
{
    long i = 1, s = 0;
    do {
        if (x % i == 0 && i%2==0)
            s = s + i;
        i++;
    } while (i < x);
    if (s == 0) return -1;
    else return s;
}

int main() 
{
    int n;
    n = Input();
    cout << sum_even_divisor(n);
}

// tong uoc chung.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>

int input() {
    int x;
    std::cin >> x;
    return x;
}

int input(int k) {
    std::cin >> k;
    return k;
}

int TongUocChung(int m, int n)
{
    int S = 0;
    if (m > n) {
        for (int i = 1; i <= n;i++)
        {
            if (m % i == 0 && n % i == 0)
                S += i;
        }
    }
    else {
        for (int i = 1; i <= m; i++) {
            if (m % i == 0 && n % i == 0)
                S += i;
        }
    }
    return S;
}
int main() {
    int a, b;
    a = input();
    input(b);
    std::cout << TongUocChung(a, b);
    return 0;
}
// tinh tong cac chu so.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
int input(int b) {
    std::cin >> b;
    return b;
}
int TongChuSo(int N)
{
    int S = 0;
    while (N > 0)
    {
        int 
		t = N % 10;
        S = S + t;
        N = N / 10;
    }
    return S;
}
    int main() {
        int a;
        input(a);
        std::cout << TongChuSo(a);
        return 0;
    }
// dao nguoc so.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
using namespace std;
int reverse(int k)
{
    int tempn, ld = 0, reversedk = 0;
    tempn = k;
    while (tempn != 0)
    {
        reversedk *= 10;
        ld = tempn % 10;
        reversedk += ld;
        tempn /= 10;
        
    }
    return reversedk;
}
    int main() 
    {
        int n;
        cin >> n;
        cout << reverse(n);
    }
// tinh tong cac so chinh phuong.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
using namespace std;

int sum_all_square(int n)
{
    int s = 0;
    for (int i = 1; i <= n; i++) {
        if (n % i==0) 
        {
            for (int j = 1; j <= i; j++) {
                if (j * j == i)
                    s = s + i;
            }
        }

        }
    return s;
}
int main() 
{
int n;
cin >> n;
cout << sum_all_square(n);
return 0;
}
//input khong truyen tham so
int input() {
    int x;
    std::cin >> x;
    return x;
}
//input truyen tham so
int input(int &k) {
    std::cin >> k;
    return k;
}
//uoc chung lon nhat cua 2 so dung de quy

#include <iostream>
using namespace std;
int input() {
	int a;
	cin >> a;
	return a;
}
int input(int& k) {
	cin >> k;
	return k;
}

int gcd(int a, int b)
{
    return b == 0 ? a : gcd(b, a % b);
}
int main() {
	int m, n;
	input(n);
	m = input();
	cout << gcd(m, n);
}
//tinh tong so uoc chung nguyen to#include <iostream>
using namespace std;
int prime_number(int n)
{
    int i = 1,demuoc = 0;
    do
    {
        if (n % i == 0)  demuoc++; i++;
    } while (i <= n);
    if (demuoc == 2) return n;
    else return 0;
}
int input() {
    int x;
    std::cin >> x;
    return x;
}

int input(int& k) {
    std::cin >> k;
    return k;
}

int sum_common_prime(int m, int n)
{
    int S = 0;
    if (m > n) {
        for (int i = 1; i <= n; i++)
        {
            if (m % i == 0 && n % i == 0)                
                S += prime_number(i);
        }
    }
    else if (m == n)
    {
        for (int i = 1; i <= n; i++) {
            if (m % i == 0 && n % i == 0)               
                S += prime_number(i);
        }
    }
    else if (m < n)
    {
        for (int i = 1; i <= m; i++) {
            if (m % i == 0 && n % i == 0)
                S += prime_number(i);
        }
           
    }
    if (S != 0)    return S;
    else return -1;
}
int main() {
    int m, n;
    cin >> m >> n;
    cout << sum_common_prime(m, n);
}
//giai thua kep
#include <iostream>
using namespace std;
long int Input(long int &x) {
    cin >> x;
    return x;
}
long int giai_thua_chan(long int n) {
   long int gt = 1;
    for (long int i = 2;  i <= n; i += 2) {
        gt *= i;
   }
    cout<< gt;
    return 0;
}

long int giai_thua_le(long int n) {
    long int gt = 1;
    for (long int i = 1; i <= n; i += 2) {
        gt *= i;
        }
        cout<< gt;
        return 0;
    }

int main()
{
    long int n;
    Input(n);
    if (n % 2 == 0) giai_thua_chan(n);
    else giai_thua_le(n);
       
}
// in so fibonanci so n.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
using namespace std;
int fib(int n)//4
{
	if (n == 1||n==0)
		return n;
	else return fib(n - 1) + fib(n - 2); 
}
int main()
{
	int n;
	cin >> n;
	if (n < 1 || n>30)
		cout << "So " << n << " khong nam trong khoang [1,30]" << endl;
	else cout << fib(n);
	
}//vong lap tim so fibonnanci

int a = 0, b = 1, c, i;
    if( x == 0)
        return a;
    for(i = 2; i <= x; i++)
    {
       c = a + b;
       a = b;
       b = c;
    }
    return b;
}
// problem 5.1 tong so nguyen to dau tien.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <math.h>
using namespace std;
int intput() {
    int n; cin >> n;
   while (n<=0 || n>50)
   {
          cout << "Gia tri vua nhap la " << n << ", khong hop le. Vui long nhap lai." << endl;
          cin >> n;
   } 
    return n;
               
}
int songuyento(int x) {
    if (x < 2) return 0;
    int i, squarex=sqrt(x);
    for (i = 2; i <= squarex; i++) 
    {
        if (x % i == 0)  return 0; 
        
    }
    return 1;
}
int main()
{
    int a, dem=0, sum = 0;
    a= intput();

    for (int i = 2; dem < a; i++) {
        if (songuyento(i)) {
            sum+=i;
            dem++;
        }
        
    }
    cout << "Tong " << a << " so nguyen to dau tien la: " << sum << " ";
}
// problem 5.04.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <math.h>
using namespace std;
long songuyento(long n) {
    long i, square = sqrt(n);
    if (n < 2) return 0;
    for (i = 2; i*i <= n; i++) {
        if (n % i == 0) return 0;
    }
    return 1;
}
long input() {
    long m;
    cin >> m;
    return m;
}
long daonguocso(long x) {
    long temp, ld = 0, reversed = 0;
    temp = x;
    while (temp != 0) {
        reversed *= 10; 
        ld = temp % 10;
        reversed += ld;
        temp /= 10;
    }
    return reversed;
}
int main()
{
    long j, a, b, dem=0;
    a = input();
    b = input();
    
    for (long i = a; i <= b; i++) {
        
        if (songuyento(i)  && songuyento(daonguocso(i)) ) {
            dem =dem+1;
        }
    }
    cout << dem << endl;
    return 0;
}
// problem 5.09-de quy fibo.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
using namespace std;
#define MAX 300

int Fibo(int);

int main()
{
	int x;
	cin >> x;

if (x < 1 || x>30)
		cout << "So " << x << " khong nam trong khoang [1,30]." << endl;
	else cout << Fibo(x);
}
int Fibo(int n)
{

if (n == 1||n==0)
		return n;
	else return Fibo(n - 1) + Fibo(n - 2); 
}
//tinh tong cac chu so so nguyen duong NPPM_GETBOOKMARKID

// problem 5.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
using namespace std;
int input() {
    int n;
    cin >> n;
    return n;
}
int input(int &k) {
    cin >> k;
    return k;
}

int sum(int n, int& s) {
    if (n < 10) return n;
    if (n == 10) { s = 1; }
    s = sum(n % 10, s) + sum(n / 10, s);
    return s;
}

int main() {
    int n, s = 0;
    input(n);
    sum(n, s);
    cout << s;
}
//protblem 5.06e
#include <iostream>
using namespace std;
5
int gcd(int& m, int& n) {
    if(m>n) {
        m = m-n; return gcd(m,n);
    }
    if(m < n) {
        n = n - m; return gcd(m,n);
    }
    else return m;

}

int main() {
	int m, n;
	cin >> m >> n;
	cout << gcd(m, n);
	return 0;
}
//1 Tổng số nguyên tố thứ N

int nhapSo() {
    int n;
    cin >> n;
     if (n <= 0 || n > 50) {
    do {
        cout << "Gia tri vua nhap la " << n << ", khong hop le. Vui long nhap lai." << endl;
        cin >> n; 
    } while(n <= 0 || n > 50);
    }
    return n;
}

int primeNumber(int n) {
    for (int i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) return 0;
    }
    return n>1;
}

int main () {
    int n ;
    n = nhapSo();
    int s = 0, count = 0;
    for (int i = 2 ;; i++) {
        if(primeNumber(i)) {
            s += i;
            count++;
        }
        if(count == n) {break;}
    }
    cout << "Tong " << n << " so nguyen to dau tien la: " << s;
    
    return 0;
}

//2   Tìm sin(x) với x(radian)

/*
int main () {
    double s, a, b = 1 , c = 1;
    int d = -1;
    double epsilon = 0.00001;
    double x; 
    cin >> x;
    s = a = b = x;
    for (int i = 3; a > epsilon; i+= 2, d = -d) {
        a = (b*= x*x) / (c *= i*(i-1));
        s += d*a; 
    }
    cout << setprecision(4) <<  fixed <<  s;
    return 0;
}
*/

//3 Tìm số lớn nhất. Nhập lần lượt các số cần kiểm tra (nhập 0 báo hiệu kết thúc)


int largest_input(){
      int n;
    cin >> n;
    if(!n) return 0;
    else return max(n,largest_input());
}
int main(){
	cout << largest_input();
}

//4   Kiểm tra trong kgoang3 [a,b] có bao nhiêu snt mà đảo ngc vẫn là snt

/*
using namespace std;
int inverNumber(int n) {
    int s = 0;
    while (n) {
        s = s*10 + n%10;
        n /= 10;
    }
    return s;
}

bool primeNumber(int n) {
    if(n < 2) {return 0;}
    for (int i = 2; i*i <= n; i++) {
        if (n % i == 0) return 0;
    }
    return n>1;
}
int main () {
    int a, b, s = 0, c = 0;
    cin >> a >> b;
    if (a <= b) {
    for (int i = a; i <= b; i++) {
        if(i > 2 && i % 2 == 0) {continue;}
        if(i % 3 == 0) {continue;}
        if(primeNumber(i) && primeNumber(inverNumber(i))) {
            c++;
    }
}
}
    cout << c;
}
*/ 

//5 
using namespace std;
int input(int& n) {
cin >> n;
    return n;
}
int sum(int n, int& s) {
    if(n < 10) return n;
    if(n == 10) {s = 1;}
    s = sum(n%10,s) + sum(n/10,s);
    return s;
}

//6 

/*
int gcd(int& m, int& n) {
    if(m>n) {
        m = m-n; return gcd(m,n);
    }
    if(m < n) {
        n = n - m; return gcd(m,n);
    }
    else return m;

}

int main() {
	int m, n;
	cin >> m >> n;
	cout << gcd(m, n);
	return 0;
}
*/


//7  chuỗi dễ dùng dệ quy

/*
float calculate(int n) {
    if(n == 1) return 1;
    else return sqrt(n + calculate(n-1));
}

int main() {
	int n;
	cin >> n;
    cout <<fixed<<setprecision(2)<< calculate(n);
    return 0;
}
*/

//8  số đảo ngược dùng đệ quy

/* 
int re1(int n, int re) {
    if (!n) return re;
    return re1(n/10, 10*re + n%10) ;
}
int reverse(int n) {
    return re1(n, 0);
}

int main() {
    int n;
    cin >> n;
    cout << reverse(n);
}

*/

//9 fibonacci


/*
#define MAX 300

int Fibo(int);

int main()
{
	int x;
	cin >> x;
    if(x < 1 || x > 30) cout << "So " << x << " khong nam trong khoang [1,30].";
    else cout << Fibo(x);
}

int Fibo(int n) {
    if (n == 1) return 1;
    if(n == 0) return 0;
    else return Fibo(n-1) + Fibo(n-2);
}
*/

//10 Tính phép chia có dư nhưng không dùng phép chia + dùng đệ quy

/*
#include <iostream>
using namespace std;
int modulo(int m, int n){
    if(m >= n) {m = m - n; return modulo(m,n);}
    else return m;
}


int main (){
    int m, n; cin >> m >> n;
	cout << modulo(m, n);
} 
*/
